import { Page } from "../schemas/page";
import { Site } from "../schemas/site";
import { SitePublication } from "../schemas/site-publication";
import { SiteTheme } from "../schemas/site-theme";
import { Widget } from "../schemas/widget";
import { WidgetType } from "../schemas/widget-type";
export type BuilderMode = 'site-builder' | 'site-template-builder' | 'site-template-preview' | 'page-template-builder' | 'event-publication-builder' | 'form-publication-builder' | 'product-publication-builder' | 'product-category-publication-builder' | 'event-category-publication-builder' | 'event-publication-builder';
export type BuilderOptions = {
    mode: BuilderMode;
    leftBarEnabled: boolean;
    themePanelEnabled: boolean;
    multiPageEnabled: boolean;
    gridPanelEnabled: boolean;
    siteSettingEnabled: boolean;
    widgetManageEnabled: boolean;
    saveEnabled: boolean;
    releaseEnabled: boolean;
    historyEnabled: boolean;
    publicationPanelEnabled: boolean;
    save: () => void;
    exit: () => void;
    loadSite: () => Promise<void>;
    loadWidgets: () => Promise<void>;
    loadWidgetTypes: () => Promise<void>;
    release: () => Promise<void>;
};
export declare enum ViewportMode {
    Desktop = "desktop",
    Tablet = "tablet",
    Mobile = "mobile"
}
export interface WidgetSelectedMessage {
    type: 'widget-selected';
    data: {
        scopedID: string;
        mouseX: number;
        mouseY: number;
    };
}
export interface AddWidgetRequestMessage {
    type: 'add-widget-request';
    data: {
        targetScopedID: string;
    };
}
export interface WidgetDeletedMessage {
    type: 'widget-deleted';
    data: {
        scopedID: string;
    };
}
export interface ChangedMessage {
    type: 'changed';
    data: {
        site: Site;
        theme: SiteTheme | null;
        page: Page;
        widgets: Widget[];
        widgetTypes: WidgetType[];
        sitePublication: SitePublication<any> | null;
    };
}
export interface IframeInitMessage {
    type: 'iframe-initialized';
}
export interface ScreenshotRequestedMessage {
    type: 'screenshot-request';
    data: {
        status: 'success' | 'error';
        imageURL: string;
    };
}
export interface ScreenshotResponseMessage {
    type: 'screenshot-response';
    data: {
        status: 'success' | 'error';
        imageURL: string;
    };
}
export type SiteMessageType = '' | 'add-widget-request' | 'widget-selected' | 'widget-deleted' | 'changed' | 'screenshot-request' | 'screenshot-response' | 'iframe-initialized';
export type SiteMessage = AddWidgetRequestMessage | WidgetSelectedMessage | WidgetDeletedMessage | ChangedMessage | ScreenshotRequestedMessage | ScreenshotResponseMessage | IframeInitMessage;
//# sourceMappingURL=site-builder.d.ts.map