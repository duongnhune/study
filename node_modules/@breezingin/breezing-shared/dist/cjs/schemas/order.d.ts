import { Reservation } from "./reservation";
import { Workspace } from "./workspace";
import { PaymentMethod } from "./payment-method-setting";
export declare enum OrderStatus {
    None = "",
    Confirmed = "confirmed",
    Pending = "pending",
    Cancelled = "cancelled"
}
export interface Order {
    approvalRequired: boolean;
    approveTime: number;
    buyerAddress: string;
    buyerCountry: string;
    buyerEmail: string;
    buyerName: string;
    buyerPhone: string;
    cancelTime: number;
    code: string;
    confirmTime: number;
    confirmedByUser: null | string;
    confirmedByUserID: string;
    conversionRate: number;
    convertedCurrency: string;
    convertedTotalPrice: number;
    couponCode: string;
    createTime: number;
    currency: string;
    customFields: any;
    discount: number;
    email: string;
    event: any;
    eventID: string;
    expireTime: number;
    registerTime: number;
    inviteTime: number;
    id: string;
    isConverted: boolean;
    name: string;
    paymentMethod: PaymentMethod;
    phone: string;
    refCode: string;
    rejectMessage: string;
    rejectTime: number;
    reservation: Reservation;
    reservationID: string;
    status: string;
    tickets: any;
    totalPrice: number;
    withdrawRequestID: string;
    withdrawTime: number;
    workspaceID: string;
    workspace?: Workspace;
}
//# sourceMappingURL=order.d.ts.map